% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hierarchical_importance.R
\name{hierarchical_importance}
\alias{hierarchical_importance}
\alias{plot.hierarchical_importance}
\title{Calculates importance of hierarchically grouped aspects}
\usage{
hierarchical_importance(
  x,
  data,
  y = NULL,
  predict_function = predict,
  new_observation = NULL,
  N = 1000,
  clust_method = "complete",
  ...
)

hierarchical_importance(
  x,
  data,
  y = NULL,
  predict_function = predict,
  new_observation = NULL,
  N = 1000,
  clust_method = "complete",
  ...
)

\method{plot}{hierarchical_importance}(
  x,
  new_observation = NULL,
  absolute_value = FALSE,
  show_labels = TRUE,
  add_last_group = FALSE,
  axis_lab_size = 10,
  text_size = 3,
  ...
)
}
\arguments{
\item{x}{a model to be explained}

\item{data}{dataset, should be without target variable}

\item{y}{true labels for \code{data}, will be extracted from \code{x}
if it's an explainer,
  need to be provided if feature importance is to be calculated}

\item{predict_function}{predict function}

\item{new_observation}{selected observation with columns that corresponds to
variables used in the model (it should be without target variable),
if NULL feature_importance will be calculated}

\item{N}{number of observations to be sampled (with replacement) from data}

\item{clust_method}{the agglomeration method to be used, see
\code{\link[stats]{hclust}} methods}

\item{...}{other parameters}

\item{absolute_value}{if TRUE, aspect importance values will be drawn as
absolute values}

\item{show_labels}{if TRUE, plot will have annotated axis Y}

\item{add_last_group}{if TRUE, plot will draw connecting line between last
two groups}

\item{axis_lab_size}{size of labels on axis Y, if applicable}

\item{text_size}{size of labels annotating values of aspects importance}
}
\value{
ggplot
}
\description{
This function plots tree that shows order of feature grouping and aspect
importance or feature importance values of every newly created aspect.
}
\examples{
library(DALEX)
library(ingredients)
apartments_num <- apartments[,unlist(lapply(apartments, is.numeric))]
apartments_num_lm_model <- lm(m2.price ~ ., data = apartments_num)
apartments_num_new_observation <- apartments_num[2,-1]
apartments_num_mod <- apartments_num[,-1]
hi <- hierarchical_importance(x = apartments_num_lm_model,
    data = apartments_num_mod,
    new_observation = apartments_num_new_observation)
plot(hi, add_last_group = TRUE,)


}
